//! –û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

mod theme;
mod window;

use eframe::egui;
use crate::config::*;
use crate::config::{DEFAULT_OPACITY, MIN_OPACITY, MAX_OPACITY};

/// –ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
pub struct AdhanApp {
    /// –¢–µ–∫—É—â–∞—è —Ç–µ–º–∞ (—Ç–µ–º–Ω–∞—è/—Å–≤–µ—Ç–ª–∞—è)
    theme: theme::Theme,
    /// –¢–µ–∫—É—â–∞—è –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å (0.0 - –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ, 1.0 - –Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ)
    opacity: f32,
}

impl Default for AdhanApp {
    fn default() -> Self {
        Self {
            theme: theme::Theme::Dark, // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç–µ–º–Ω–∞—è —Ç–µ–º–∞
            opacity: DEFAULT_OPACITY,  // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–ª–Ω–∞—è –Ω–µ–ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
        }
    }
}

impl eframe::App for AdhanApp {
    /// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    fn update(&mut self, ctx: &egui::Context, _frame: &mut eframe::Frame) {
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ç–µ–º—É –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
        theme::apply_theme(ctx, self.theme, self.opacity);

        // –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å —Å –∫–Ω–æ–ø–∫–æ–π —Å–º–µ–Ω—ã —Ç–µ–º—ã
        egui::TopBottomPanel::top("top_panel").show(ctx, |ui| {
            ui.horizontal(|ui| {
                ui.heading(WINDOW_TITLE);
                ui.with_layout(egui::Layout::right_to_left(egui::Align::Center), |ui| {
                    let theme_text = match self.theme {
                        theme::Theme::Dark => "üåû Light",
                        theme::Theme::Light => "üåô Dark",
                    };
                    
                    if ui.button(theme_text).clicked() {
                        self.theme = match self.theme {
                            theme::Theme::Dark => theme::Theme::Light,
                            theme::Theme::Light => theme::Theme::Dark,
                        };
                    }
                    
                    // –ü–æ–ª–∑—É–Ω–æ–∫ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏
                    ui.separator();
                    ui.horizontal(|ui| {
                        ui.label("–ü—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å:");
                        ui.add(
                            egui::Slider::new(&mut self.opacity, MIN_OPACITY..=MAX_OPACITY)
                                .step_by(0.05)
                                .text("")
                                .min_decimals(1)
                                .max_decimals(2)
                        );
                        ui.label(format!("{:.0}%", self.opacity * 100.0));
                    });
                });
            });
        });

        // –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –æ—Ç—Ä–∏—Å–æ–≤–∫–∏
        egui::CentralPanel::default().show(ctx, |ui| {
            ui.vertical_centered_justified(|ui| {
                ui.separator();
                
                // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
                ui.label("–í—Ä–µ–º—è –Ω–∞–º–∞–∑–æ–≤ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∑–¥–µ—Å—å");
            });
        });
    }
}

/// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
pub fn run() -> Result<(), eframe::Error> {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫–Ω–∞
    let window_options = eframe::NativeOptions {
        viewport: egui::ViewportBuilder::default()
            .with_inner_size([WINDOW_WIDTH, WINDOW_HEIGHT])
            .with_min_inner_size([MIN_WINDOW_WIDTH, MIN_WINDOW_HEIGHT])
            .with_transparent(true)
            .with_decorations(true), 
        ..Default::default()
    };

    // –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    eframe::run_native(
        WINDOW_TITLE,
        window_options,
        Box::new(|_cc| Ok(Box::<AdhanApp>::default())),
    )
}